# Lisk Gaming Hub Monorepo

A hybrid gaming platform on Lisk L2: off-chain gameplay + on-chain custody/settlement.

Monorepo packages

- apps/web: React frontend (lobby, deposits, gameplay UI, admin)
- apps/api: Node.js backend (game servers, matchmaking, settlement worker)
- packages/contracts: Solidity smart contracts (Vault, Hub, Treasury, Token, Settlement)
- packages/sdk: TypeScript SDK (typed contract clients, network config)
- packages/ui: Shared UI components
- configs: Shared linting/formatting/commit conventions

Test-first workflow (TDD)

- Write spec (feature → scenarios → test cases)
- Implement minimal code to pass tests
- Refactor with tests staying green
- Track coverage and add property/invariant tests where relevant

Core PRD features (acceptance checklist)

- Wallet connection and Lisk L2 network switch
- Game discovery via GameHub
- ERC20 approve + deposit with 2% fee to DAO
- Per-game balances and withdraw (if allowed)
- Off-chain Ping-Pong, on-chain settlement via GameSettlement
- Admin: add/remove game, trigger/monitor settlements, view treasury

Local development

- Node.js 20.x, PNPM or NPM
- Solidity 0.8.x (Hardhat/Foundry)
- Postgres or Mongo (choose one in apps/api)
- Copy .env.example files and configure endpoints

Commands

- Install: npm install -w . or pnpm i -w
- Lint: npm run lint -ws
- Test all: npm test -ws
- Build all: npm run build -ws

CI

- See .github/workflows/main.yaml for lint/build checks
